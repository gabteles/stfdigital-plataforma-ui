buildscript {
    ext {    
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }        
    }
    dependencies {
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.6.0")
        classpath('com.moowork.gradle:gradle-node-plugin:0.12')
        classpath('com.moowork.gradle:gradle-gulp-plugin:0.12')
    }
}

apply plugin: 'eclipse'
apply plugin: "com.palantir.docker"
apply plugin: 'com.moowork.node'
apply plugin: 'com.moowork.gulp'

node {
  // Version of node to use.
  version = '5.9.1'

  // Base URL for fetching node distributions (change if you have a mirror).
  distBaseUrl = 'https://nodejs.org/dist'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true

  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/node")

  // Set the work directory where node_modules should be located
  nodeModulesDir = file("${project.projectDir}")
}

//Cria o diretório dist para não dar erro na task docker, pois o dist não existe no git
task createDistFolder() {
    def distDir = new File(projectDir, "dist")
    if(!distDir.exists()) {
        distDir.mkdirs()
    }
}

//npmInstall.dependsOn npm_prune
gulp_clean.dependsOn tasks.npmInstall
gulp_build.dependsOn gulp_clean
dockerPrepare.dependsOn gulp_build

ext.dockerImageTag = project.hasProperty('dockerImageTag') ? project.getProperty('dockerImageTag') : ''

docker {
    name 'plataforma-ui' + (dockerImageTag ? ':' + dockerImageTag : '')
    dockerfile 'Dockerfile'
    files 'dist', '.dockerignore', 'superstatic.json', 'superstatic.js', 'ssl'
}