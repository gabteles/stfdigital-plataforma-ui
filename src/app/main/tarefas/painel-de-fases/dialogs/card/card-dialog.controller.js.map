{"version":3,"sources":["tarefas/painel-de-fases/dialogs/card/card-dialog.controller.ts"],"names":[],"mappings":"AAAA,CAAC;IAEG,YAAY,CAAC;IAEb,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,6BAA6B,CAAC,CAAC;IAExD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QAElB,IAAI,EAAE,gCAAgC;QAEtC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,eAAe,EAAE,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,CAAC;QAGlH,IAAI,EAAE;YACF,OAAO;YACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAE3C,UAAU;YACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;YACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAElC,sCAAsC;YACtC,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,GAAI,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5C,CAAC;QACL,CAAC;QAED,OAAO,EAAE;YAEL;;eAEG;YACH,WAAW,EAAE;gBACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC;YAED;;eAEG;YACH,WAAW,EAAE;gBACT,IAAI,QAAQ,CAAC;gBACb,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG,CAAC;oBAC5D,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;wBAC3D,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC;oBACV,CAAC;gBACL,CAAC;gBACD,MAAM,CAAC,QAAQ,CAAC;YACpB,CAAC;YAED;;;;eAIG;YACH,UAAU,EAAE,UAAS,EAAE;gBACnB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;oBACjC,KAAK,EAAgB,IAAI,CAAC,SAAS,CAAC,gDAAgD,CAAC;oBACrF,MAAM,EAAe,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;oBACvD,WAAW,EAAU,IAAI,CAAC,SAAS,CAAC,4DAA4D,CAAC;oBACjG,SAAS,EAAY,IAAI,CAAC,SAAS,CAAC,gDAAgD,CAAC;oBACrF,WAAW,EAAU,EAAE;oBACvB,mBAAmB,EAAE,IAAI;oBACzB,aAAa,EAAQ,IAAI;oBACzB,EAAE,EAAmB,IAAI,CAAC,SAAS,CAAC,yCAAyC,CAAC;oBAC9E,MAAM,EAAe,IAAI,CAAC,SAAS,CAAC,0CAA0C,CAAC;iBAClF,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAElC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAEnE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEpE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClB,CAAC;YAED;;;;eAIG;YACH,gBAAgB,EAAE,UAAS,YAAY;gBACnC,EAAE,CAAC,CAAE,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAkB,CAAC,CAAC,CAAC;oBACjD,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBACvC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;gBAC/C,CAAC;YACL,CAAC;YAED;;;;eAIG;YACH,gBAAgB,EAAE,UAAS,IAAI;gBAC3B,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,EAAG,CAAC,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;gBACrC,CAAC;gBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACzE,CAAC;YAED;;;;;eAKG;YACH,gBAAgB,EAAE,UAAS,KAAK;gBAC5B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;YACxE,CAAC;YAED;;;;;eAKG;YACH,WAAW,EAAE,UAAS,KAAK;gBACvB,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,KAAK,EAAG,CAAC,CAAC,CAAC;oBACzD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC;YAC/F,CAAC;YAED;;eAEG;YACH,WAAW,EAAE;gBACT,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;oBACnB,IAAI,EAAK,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;oBACrC,MAAM,EAAG,IAAI,CAAC,YAAY;oBAC1B,OAAO,EAAE,IAAI,CAAC,aAAa;iBAC9B,CAAC,CAAC;gBAEH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAC3B,CAAC;YAED;;eAEG;YACH,WAAW,EAAE;gBACT,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE1D,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,IAAI;oBAC5C,EAAE,CAAC,CAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;wBAClE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrE,CAAC;gBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEd,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAC3B,CAAC;YAED;;;;;eAKG;YACH,iBAAiB,EAAE,UAAS,KAAK;gBAC7B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;YACzE,CAAC;YAED;;;;;eAKG;YACH,YAAY,EAAE,UAAS,MAAM;gBACzB,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,KAAK,EAAG,CAAC,CAAC,CAAC;oBAC3D,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC;YACjG,CAAC;YAED;;;eAGG;YACH,kBAAkB,EAAE,UAAS,IAAI;gBAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACjC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,IAAI,eAAe,GAAG,CAAC,CAAC;gBACxB,IAAI,aAAa,GAAG,CAAC,CAAC;gBAEtB,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,SAAS;oBAC3C,EAAE,CAAC,CAAE,SAAS,CAAC,OAAQ,CAAC,CAAC,CAAC;wBACtB,YAAY,EAAE,CAAC;oBACnB,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;gBAEtC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,IAAI;oBAChD,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxC,eAAe,IAAI,IAAI,CAAC,iBAAiB,CAAC;gBAC9C,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC;YAClD,CAAC;YAED;;;;;eAKG;YACH,YAAY,EAAE,UAAS,IAAI,EAAE,SAAS;gBAClC,EAAE,CAAC,CAAE,CAAC,IAAI,IAAI,IAAI,KAAK,EAAG,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,YAAY,GAAG;oBACf,MAAM,EAAK,IAAI;oBACf,SAAS,EAAE,KAAK;iBACnB,CAAC;gBAEF,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAExC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YACvC,CAAC;YAED;;;;eAIG;YACH,eAAe,EAAE,UAAS,IAAI;gBAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEnE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,IAAI;oBAChD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClB,CAAC;YAED;;eAEG;YACH,eAAe,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBACtB,IAAI,EAAiB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;oBACjD,MAAM,EAAe,IAAI,CAAC,iBAAiB;oBAC3C,mBAAmB,EAAE,CAAC;oBACtB,YAAY,EAAS,EAAE;iBAC1B,CAAC,CAAC;gBAEH,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAChC,CAAC;YAED;;;;eAIG;YACH,aAAa,EAAE,UAAS,cAAc;gBAClC,IAAI,UAAU,GAAG;oBACb,UAAU,EAAE,0BAA0B;oBACtC,SAAS,EAAG,cAAc;oBAC1B,MAAM,EAAM,KAAK;iBACpB,CAAC;gBAEF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC3C,CAAC;YAED;;;;;eAKG;YACH,eAAe,EAAE,UAAS,KAAK;gBAC3B,IAAI,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC9C,MAAM,CAAC,kBAAkB,IAAI;oBAEzB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBACrE,CAAC,CAAC;YACN,CAAC;SACJ;KACJ,CAAC,CAAC;AACP,CAAC,CAAC,EAAE,CAAC","file":"tarefas/painel-de-fases/dialogs/card/card-dialog.controller.js","sourcesContent":["(function ()\r\n{\r\n    'use strict';\r\n\r\n    var app = angular.module('app.tarefas.painel-de-fases');\r\n        \r\n    app.classy.controller({\r\n\r\n        name: 'ScrumboardCardDialogController',\r\n\r\n        inject: ['$document', '$mdDialog', 'fuseTheming', 'fuseGenerator', 'msUtils', 'BoardService', 'cardId', '$filter'],\r\n\r\n\r\n        init: function() {\r\n            // Data\r\n            this.board = this.BoardService.data;\r\n            this.card = this.board.cards.getById(this.cardId);\r\n            this.newLabelColor = 'red';\r\n            this.members = this.board.members;\r\n            this.labels = this.board.labels;\r\n            this.translate = this.$filter('translate');\r\n\r\n            // Methods\r\n            this.palettes = this.fuseTheming.getRegisteredPalettes();\r\n            this.rgba = this.fuseGenerator.rgba;\r\n            this.toggleInArray = this.msUtils.toggleInArray;\r\n            this.exists = this.msUtils.exists;\r\n       \r\n            // Convert due date to the date object\r\n            if ( this.card.due ) {\r\n                this.card.due = new Date(this.card.due);\r\n            }\r\n        },\r\n\r\n        methods: {\r\n\r\n            /**\r\n             * Close Dialog\r\n             */\r\n            closeDialog: function() {\r\n                this.$mdDialog.hide();\r\n            },\r\n\r\n            /**\r\n             * Get Card List\r\n             */\r\n            getCardList: function() {\r\n                var response;\r\n                for ( var i = 0, len = this.board.lists.length; i < len; i++ ) {\r\n                    if ( this.board.lists[i].idCards.indexOf(this.card.id) > -1 ) {\r\n                        response = this.board.lists[i];\r\n                        break;\r\n                    }\r\n                }\r\n                return response;\r\n            },\r\n\r\n            /**\r\n             * Remove card\r\n             *\r\n             * @param ev\r\n             */\r\n            removeCard: function(ev) {\r\n                var confirm = this.$mdDialog.confirm({\r\n                    title              : this.translate('TAREFAS.PAINEL-DE-FASES.DIALOGO.REMOVER-CARTAO'),\r\n                    parent             : this.$document.find('#scrumboard'),\r\n                    textContent        : this.translate('TAREFAS.PAINEL-DE-FASES.DIALOGO.REMOVER-CARTAO-CONFIRMACAO'),\r\n                    ariaLabel          : this.translate('TAREFAS.PAINEL-DE-FASES.DIALOGO.REMOVER-CARTAO'),\r\n                    targetEvent        : ev,\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose      : true,\r\n                    ok                 : this.translate('TAREFAS.PAINEL-DE-FASES.DIALOGO.REMOVER'),\r\n                    cancel             : this.translate('TAREFAS.PAINEL-DE-FASES.DIALOGO.CANCELAR')\r\n                });\r\n\r\n                this.$mdDialog.show(confirm).then(function () {\r\n                    var cardList = this.getCardList();\r\n\r\n                    cardList.idCards.splice(cardList.idCards.indexOf(this.card.id), 1);\r\n\r\n                    this.board.cards.splice(this.board.cards.indexOf(this.card), 1);\r\n\r\n                }.bind(this));\r\n            },\r\n\r\n            /**\r\n             * Toggle cover image\r\n             *\r\n             * @param attachmentId\r\n             */\r\n            toggleCoverImage: function(attachmentId) {\r\n                if ( attachmentId === this.card.idAttachmentCover ) {\r\n                    this.card.idAttachmentCover = null;\r\n                } else {\r\n                    this.card.idAttachmentCover = attachmentId;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove attachment\r\n             *\r\n             * @param item\r\n             */\r\n            removeAttachment: function(item) {\r\n                if ( this.card.idAttachmentCover === item.id ) {\r\n                    this.card.idAttachmentCover = '';\r\n                }\r\n                this.card.attachments.splice(this.card.attachments.indexOf(item), 1);\r\n            },\r\n\r\n            /**\r\n             * Add label chips\r\n             *\r\n             * @param query\r\n             * @returns {filterFn}\r\n             */\r\n            labelQuerySearch: function(query) {\r\n                return query ? this.labels.filter(this.createFilterFor(query)) : [];\r\n            },\r\n\r\n            /**\r\n             * Label filter\r\n             *\r\n             * @param label\r\n             * @returns {boolean}\r\n             */\r\n            filterLabel: function(label) {\r\n                if ( !this.labelSearchText || this.labelSearchText === '' ) {\r\n                    return true;\r\n                }\r\n\r\n                return angular.lowercase(label.name).indexOf(angular.lowercase(this.labelSearchText)) >= 0;\r\n            },\r\n\r\n            /**\r\n             * Add new label\r\n             */\r\n            addNewLabel: function() {\r\n                this.board.labels.push({\r\n                    \"id\"   : this.msUtils.guidGenerator(),\r\n                    \"name\" : this.newLabelName,\r\n                    \"color\": this.newLabelColor\r\n                });\r\n\r\n                this.newLabelName = '';\r\n            },\r\n\r\n            /**\r\n             * Remove label\r\n             */\r\n            removeLabel: function() {\r\n                var arr = this.board.labels;\r\n                arr.splice(arr.indexOf(arr.getById(this.editLabelId)), 1);\r\n\r\n                angular.forEach(this.board.cards, function (card) {\r\n                    if ( card.idLabels && card.idLabels.indexOf(this.editLabelId) > -1 ) {\r\n                        card.idLabels.splice(card.idLabels.indexOf(this.editLabelId), 1);\r\n                    }\r\n                }.bind(this));\r\n\r\n                this.newLabelName = '';\r\n            },\r\n\r\n            /**\r\n             * Add member chips\r\n             *\r\n             * @param query\r\n             * @returns {Array}\r\n             */\r\n            memberQuerySearch: function(query) {\r\n                return query ? this.members.filter(this.createFilterFor(query)) : [];\r\n            },\r\n\r\n            /**\r\n             * Member filter\r\n             *\r\n             * @param member\r\n             * @returns {boolean}\r\n             */\r\n            filterMember: function(member) {\r\n                if ( !this.memberSearchText || this.memberSearchText === '' ) {\r\n                    return true;\r\n                }\r\n\r\n                return angular.lowercase(member.name).indexOf(angular.lowercase(this.memberSearchText)) >= 0;\r\n            },\r\n\r\n            /**\r\n             * Update check list stats\r\n             * @param list\r\n             */\r\n            updateCheckedCount: function(list) {\r\n                var checkItems = list.checkItems;\r\n                var checkedItems = 0;\r\n                var allCheckedItems = 0;\r\n                var allCheckItems = 0;\r\n\r\n                angular.forEach(checkItems, function (checkItem) {\r\n                    if ( checkItem.checked ) {\r\n                        checkedItems++;\r\n                    }\r\n                });\r\n\r\n                list.checkItemsChecked = checkedItems;\r\n\r\n                angular.forEach(this.card.checklists, function (item) {\r\n                    allCheckItems += item.checkItems.length;\r\n                    allCheckedItems += item.checkItemsChecked;\r\n                });\r\n\r\n                this.card.checkItems = allCheckItems;\r\n                this.card.checkItemsChecked = allCheckedItems;\r\n            },\r\n\r\n            /**\r\n             * Add checklist item\r\n             *\r\n             * @param text\r\n             * @param checkList\r\n             */\r\n            addCheckItem: function(text, checkList) {\r\n                if ( !text || text === '' ) {\r\n                    return;\r\n                }\r\n\r\n                var newCheckItem = {\r\n                    'name'   : text,\r\n                    'checked': false\r\n                };\r\n\r\n                checkList.checkItems.push(newCheckItem);\r\n\r\n                this.updateCheckedCount(checkList);\r\n            },\r\n\r\n            /**\r\n             * Remove checklist\r\n             *\r\n             * @param item\r\n             */\r\n            removeChecklist: function(item) {\r\n                this.card.checklists.splice(this.card.checklists.indexOf(item), 1);\r\n\r\n                angular.forEach(this.card.checklists, function (list) {\r\n                    this.updateCheckedCount(list);\r\n                }.bind(this));\r\n            },\r\n\r\n            /**\r\n             * Create checklist\r\n             */\r\n            createCheckList: function() {\r\n                this.card.checklists.push({\r\n                    \"id\"               : this.msUtils.guidGenerator(),\r\n                    \"name\"             : this.newCheckListTitle,\r\n                    \"checkItemsChecked\": 0,\r\n                    \"checkItems\"       : []\r\n                });\r\n\r\n                this.newCheckListTitle = '';\r\n            },\r\n\r\n            /**\r\n             * Add new comment\r\n             *\r\n             * @param newCommentText\r\n             */\r\n            addNewComment: function(newCommentText) {\r\n                var newComment = {\r\n                    \"idMember\": \"36027j1930450d8bf7b10158\",\r\n                    \"message\" : newCommentText,\r\n                    \"time\"    : \"now\"\r\n                };\r\n\r\n                this.card.comments.unshift(newComment);\r\n            },\r\n\r\n            /**\r\n             * Filter for chips\r\n             *\r\n             * @param query\r\n             * @returns {filterFn}\r\n             */\r\n            createFilterFor: function(query) {\r\n                var lowercaseQuery = angular.lowercase(query);\r\n                return function filterFn(item)\r\n                {\r\n                    return angular.lowercase(item.name).indexOf(lowercaseQuery) >= 0;\r\n                };\r\n            }\r\n        }\r\n    });\r\n})();"],"sourceRoot":"/source/"}