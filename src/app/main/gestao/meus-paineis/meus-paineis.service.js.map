{"version":3,"sources":["gestao/meus-paineis/meus-paineis.service.ts"],"names":[],"mappings":"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","file":"gestao/meus-paineis/meus-paineis.service.js","sourcesContent":["module app.gestao.meusPaineis {\r\n    'use strict';\r\n    import IHttpService = angular.IHttpService;\r\n    import IPromise = angular.IPromise;\r\n\r\n    export class MeusPaineisService {\r\n\r\n        private static widgetsJson: string = 'app/data/sample/gestao/meus-paineis/dashboard-widgets.json';\r\n\r\n        /** @ngInject **/\r\n        constructor(private $http: IHttpService) { }\r\n\r\n        public loadDashboardWidget(widgetName: string): any {\r\n            var widget: any = {};\r\n            this.data()\r\n                .then(data => {\r\n                    angular.copy(this['get' + widgetName](data), widget);\r\n                });\r\n            return widget;\r\n        }\r\n\r\n        private data(): IPromise<any> {\r\n            return this.$http\r\n                .get(MeusPaineisService.widgetsJson)\r\n                .then(response => {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n        private getChart1(data: any): any {\r\n            return data.chart1;\r\n        }\r\n\r\n        private getChart2(data: any): any {\r\n            return data.chart2;\r\n        }\r\n\r\n        private getWidget1(data: any): any {\r\n            return data.widget1;\r\n        }\r\n\r\n        private getWidget2(data: any): any {\r\n            return data.widget2;\r\n        }\r\n\r\n        private getWidget3(data: any): any {\r\n            return data.widget3;\r\n        }\r\n\r\n        private getWidget4(data: any): any {\r\n            return data.widget4;\r\n        }\r\n\r\n        private getWidget5(data: any): any {\r\n            var widget: any = {\r\n                title       : data.widget5.title,\r\n                mainChart   : {\r\n                    config : {\r\n                        refreshDataOnly: true,\r\n                        deepWatchData  : true\r\n                    },\r\n                    options: {\r\n                        chart: {\r\n                            type        : 'multiBarChart',\r\n                            color       : ['#03a9f4', '#b3e5fc'],\r\n                            height      : 420,\r\n                            margin      : {\r\n                                top   : 8,\r\n                                right : 16,\r\n                                bottom: 32,\r\n                                left  : 32\r\n                            },\r\n                            clipEdge    : true,\r\n                            groupSpacing: 0.3,\r\n                            reduceXTicks: false,\r\n                            stacked     : true,\r\n                            duration    : 250,\r\n                            x           : (d) => { return d.x; },\r\n                            y           : (d) => { return d.y; },\r\n                            yAxis       : {\r\n                                tickFormat: (d) => { return d; }\r\n                            },\r\n                            legend      : {\r\n                                margin: {\r\n                                    top   : 8,\r\n                                    bottom: 32\r\n                                }\r\n                            },\r\n                            controls    : {\r\n                                margin: {\r\n                                    top   : 8,\r\n                                    bottom: 32\r\n                                }\r\n                            },\r\n                            tooltip     : {\r\n                                gravity: 's',\r\n                                classes: 'gravity-s'\r\n                            }\r\n                        }\r\n                    },\r\n                    data   : []\r\n                },\r\n                supporting  : {\r\n                    widgets: {\r\n                        created  : {\r\n                            data : data.widget5.supporting.created,\r\n                            chart: { data: [] }\r\n                        },\r\n                        closed   : {\r\n                            data : data.widget5.supporting.closed,\r\n                            chart: { data: [] }\r\n                        },\r\n                        reOpened : {\r\n                            data : data.widget5.supporting.reOpened,\r\n                            chart: { data: [] }\r\n                        },\r\n                        wontFix  : {\r\n                            data : data.widget5.supporting.wontFix,\r\n                            chart: { data: [] }\r\n                        },\r\n                        needsTest: {\r\n                            data : data.widget5.supporting.needsTest,\r\n                            chart: { data: [] }\r\n                        },\r\n                        fixed    : {\r\n                            data : data.widget5.supporting.fixed,\r\n                            chart: { data: [] }\r\n                        }\r\n                    },\r\n                    chart  : {\r\n                        config : {\r\n                            refreshDataOnly: true,\r\n                            deepWatchData  : true\r\n                        },\r\n                        options: {\r\n                            chart: {\r\n                                type                   : 'lineChart',\r\n                                color                  : ['#03A9F4'],\r\n                                height                 : 50,\r\n                                margin                 : {\r\n                                    top   : 8,\r\n                                    right : 0,\r\n                                    bottom: 0,\r\n                                    left  : 0\r\n                                },\r\n                                isArea                 : true,\r\n                                interpolate            : 'cardinal',\r\n                                clipEdge               : true,\r\n                                duration               : 500,\r\n                                showXAxis              : false,\r\n                                showYAxis              : false,\r\n                                showLegend             : false,\r\n                                useInteractiveGuideline: true,\r\n                                x                      : (d) => { return d.x; },\r\n                                y                      : (d) => { return d.y; },\r\n                                yDomain                : [0, 9],\r\n                                xAxis                  : {\r\n                                    tickFormat: (d) => { return widget.days[d]; }\r\n                                },\r\n                                interactiveLayer       : {\r\n                                    tooltip: {\r\n                                        gravity: 'e',\r\n                                        classes: 'gravity-e'\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        data   : []\r\n                    }\r\n                },\r\n                days        : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                ranges      : data.widget5.ranges,\r\n                currentRange: '',\r\n                changeRange : (range) => {\r\n                    widget.currentRange = range;\r\n\r\n                    /**\r\n                     * Update main chart data by iterating through the\r\n                     * chart dataset and separately adding every single\r\n                     * dataset by hand.\r\n                     *\r\n                     * You MUST NOT swap the entire data object by doing\r\n                     * something similar to this:\r\n                     * this.widget.mainChart.data = chartData\r\n                     *\r\n                     * It would be easier but it won't work with the\r\n                     * live updating / animated charts due to how d3\r\n                     * works.\r\n                     *\r\n                     * If you don't need animated / live updating charts,\r\n                     * you can simplify these greatly.\r\n                     */\r\n                    angular.forEach(data.widget5.mainChart, (chartData, index) => {\r\n                        widget.mainChart.data[index] = {\r\n                            key   : chartData.key,\r\n                            values: chartData.values[range]\r\n                        };\r\n                    });\r\n\r\n                    /**\r\n                     * Do the same thing for the supporting widgets but they\r\n                     * only have 1 dataset so we can do [0] without needing to\r\n                     * iterate through in their data arrays\r\n                     */\r\n                    angular.forEach(data.widget5.supporting, (wg, name) => {\r\n                        widget.supporting.widgets[name].chart.data[0] = {\r\n                            key   : wg.chart.key,\r\n                            values: wg.chart.values[range]\r\n                        };\r\n                    });\r\n                },\r\n                init : () => {\r\n                    // Run this function once to initialize widget\r\n\r\n                    /**\r\n                     * Update the range for the first time\r\n                     */\r\n                    widget.changeRange('TW');\r\n                }\r\n            };\r\n            widget.init();\r\n            return widget;\r\n        }\r\n\r\n        private getWidget6(data: any): any {\r\n            var widget: any = {\r\n                title       : data.widget6.title,\r\n                mainChart   : {\r\n                    config : {\r\n                        refreshDataOnly: true,\r\n                        deepWatchData  : true\r\n                    },\r\n                    options: {\r\n                        chart: {\r\n                            type        : 'pieChart',\r\n                            color       : ['#f44336', '#9c27b0', '#03a9f4', '#e91e63'],\r\n                            height      : 400,\r\n                            margin      : {\r\n                                top   : 0,\r\n                                right : 0,\r\n                                bottom: 0,\r\n                                left  : 0\r\n                            },\r\n                            donut       : true,\r\n                            clipEdge    : true,\r\n                            cornerRadius: 0,\r\n                            labelType   : 'percent',\r\n                            padAngle    : 0.02,\r\n                            x           : (d) => { return d.label; },\r\n                            y           : (d) => { return d.value; },\r\n                            tooltip     : {\r\n                                gravity: 's',\r\n                                classes: 'gravity-s'\r\n                            }\r\n                        }\r\n                    },\r\n                    data   : []\r\n                },\r\n                footerLeft  : data.widget6.footerLeft,\r\n                footerRight : data.widget6.footerRight,\r\n                ranges      : data.widget6.ranges,\r\n                currentRange: '',\r\n                changeRange : (range) => {\r\n                    widget.currentRange = range;\r\n\r\n                    /**\r\n                     * Update main chart data by iterating through the\r\n                     * chart dataset and separately adding every single\r\n                     * dataset by hand.\r\n                     *\r\n                     * You MUST NOT swap the entire data object by doing\r\n                     * something similar to this:\r\n                     * this.widget.mainChart.data = chartData\r\n                     *\r\n                     * It would be easier but it won't work with the\r\n                     * live updating / animated charts due to how d3\r\n                     * works.\r\n                     *\r\n                     * If you don't need animated / live updating charts,\r\n                     * you can simplify these greatly.\r\n                     */\r\n                    angular.forEach(data.widget6.mainChart, (data, index) => {\r\n                        widget.mainChart.data[index] = {\r\n                            label: data.label,\r\n                            value: data.values[range]\r\n                        };\r\n                    });\r\n                },\r\n                init: () => {\r\n                    // Run this function once to initialize widget\r\n\r\n                    /**\r\n                     * Update the range for the first time\r\n                     */\r\n                    widget.changeRange('TW');\r\n                }\r\n            };\r\n        }\r\n\r\n        private getWidget7(data: any): any {\r\n            return {\r\n                title       : data.widget7.title,\r\n                ranges      : data.widget7.ranges,\r\n                schedule    : data.widget7.schedule,\r\n                currentRange: 'T'\r\n            };\r\n        }\r\n\r\n        private getWidget8(data: any): any {\r\n            return {\r\n                title: data.widget8.title,\r\n                mainChart: {\r\n                    options: {\r\n                        chart: {\r\n                            type: 'pieChart',\r\n                            color: ['#f44336', '#9c27b0', '#03a9f4', '#e91e63', '#ffc107'],\r\n                            height: 400,\r\n                            margin: {\r\n                                top: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                left: 0\r\n                            },\r\n                            labelType: 'percent',\r\n                            x: (d) => { return d.label; },\r\n                            y: (d) => { return d.value; },\r\n                            tooltip: {\r\n                                gravity: 's',\r\n                                classes: 'gravity-s'\r\n                            }\r\n                        }\r\n                    },\r\n                    data: data.widget8.mainChart\r\n                }\r\n            }\r\n        }\r\n\r\n        private getWidget9(data: any): any {\r\n            var widget: any = {\r\n                title: data.widget9.title,\r\n                weeklySpent: {\r\n                    title: data.widget9.weeklySpent.title,\r\n                    count: data.widget9.weeklySpent.count,\r\n                    chartData: []\r\n                },\r\n                totalSpent: {\r\n                    title: data.widget9.totalSpent.title,\r\n                    count: data.widget9.totalSpent.count,\r\n                    chartData: []\r\n                },\r\n                remaining: {\r\n                    title: data.widget9.remaining.title,\r\n                    count: data.widget9.remaining.count,\r\n                    chartData: []\r\n                },\r\n                totalBudget: data.widget9.totalBudget,\r\n                chart: {\r\n                    config: {\r\n                        refreshDataOnly: true,\r\n                        deepWatchData: true\r\n                    },\r\n                    options: {\r\n                        chart: {\r\n                            type: 'lineChart',\r\n                            color: ['#00BCD4'],\r\n                            height: 50,\r\n                            margin: {\r\n                                top: 8,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                left: 0\r\n                            },\r\n                            isArea: true,\r\n                            interpolate: 'cardinal',\r\n                            clipEdge: true,\r\n                            duration: 500,\r\n                            showXAxis: false,\r\n                            showYAxis: false,\r\n                            showLegend: false,\r\n                            useInteractiveGuideline: true,\r\n                            x: (d) => { return d.x; },\r\n                            y: (d) => { return d.y; },\r\n                            yDomain: [0, 9],\r\n                            xAxis: {\r\n                                tickFormat: (d) => { return widget.days[d]; }\r\n                            },\r\n                            interactiveLayer: {\r\n                                tooltip: {\r\n                                    gravity: 'e',\r\n                                    classes: 'gravity-e'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                days: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                ranges: data.widget9.ranges,\r\n                currentRange: '',\r\n                changeRange: (range) => {\r\n                    widget.currentRange = range;\r\n\r\n                    /**\r\n                     * Update mini charts. They only have 1 dataset\r\n                     * so we can do [0] without needing to iterate\r\n                     * through in their data arrays\r\n                     */\r\n                    widget.weeklySpent.chartData[0] = {\r\n                        key: data.widget9.weeklySpent.chart.label,\r\n                        values: data.widget9.weeklySpent.chart.values[range]\r\n                    };\r\n\r\n                    widget.totalSpent.chartData[0] = {\r\n                        key: data.widget9.totalSpent.chart.label,\r\n                        values: data.widget9.totalSpent.chart.values[range]\r\n                    };\r\n\r\n                    widget.remaining.chartData[0] = {\r\n                        key: data.widget9.remaining.chart.label,\r\n                        values: data.widget9.remaining.chart.values[range]\r\n                    };\r\n                },\r\n                init: () => {\r\n                    // Run this function once to initialize widget\r\n\r\n                    /**\r\n                     * Update the range for the first time\r\n                     */\r\n                    widget.changeRange('TW');\r\n                }\r\n            }\r\n            widget.init();\r\n            return widget;\r\n        }\r\n\r\n        private getWidget10(data: any): any {\r\n            return data.widget10;\r\n        }\r\n\r\n        private getWidget11(data: any): any {\r\n            return {\r\n                title    : data.widget11.title,\r\n                table    : data.widget11.table,\r\n                dtOptions: {\r\n                    dom       : '<\"top\"f>rt<\"bottom\"<\"left\"<\"length\"l>><\"right\"<\"info\"i><\"pagination\"p>>>',\r\n                    pagingType: 'simple',\r\n                    order     : [0, 'asc'],\r\n                }\r\n            };\r\n        }\r\n\r\n    }\r\n    \r\n    angular\r\n        .module('app.gestao.meus-paineis')\r\n        .service('app.gestao.meus-paineis.MeusPaineisService', MeusPaineisService);\r\n}\r\n"],"sourceRoot":"/source/"}