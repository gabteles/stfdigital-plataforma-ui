{"version":3,"sources":["tarefas/minhas-tarefas/services/tarefas.service.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CA+DT;AA/DD,WAAO,GAAG;IAAC,IAAA,OAAO,CA+DjB;IA/DU,WAAA,OAAO;QAAC,IAAA,aAAa,CA+D/B;QA/DkB,WAAA,aAAa,EAAC,CAAC;YAC9B,YAAY,CAAC;YAiCb;gBAII,iBAAiB;gBACjB,8BAAoB,KAAmB;oBAAnB,UAAK,GAAL,KAAK,CAAc;gBAAI,CAAC;gBAErC,kCAAG,GAAV;oBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,UAAU,CAAC;yBACzC,IAAI,CAAC,UAAA,QAAQ;wBACV,IAAI,KAAK,GAAqB,QAAQ,CAAC,IAAI,CAAC;wBAC5C,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,UAAA,IAAI;4BACvB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gCACnC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;gCACpD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;4BAC9D,CAAC;4BACD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gCACjC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;gCAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;4BAC1D,CAAC;wBACL,CAAC,CAAC,CAAC;wBACH,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC,CAAC,CAAC;gBACnB,CAAC;gBArBc,+BAAU,GAAW,mCAAmC,CAAC;gBAsB5E,2BAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBY,kCAAoB,uBAwBhC,CAAA;YAED,OAAO;iBACF,MAAM,CAAC,4BAA4B,CAAC;iBACpC,OAAO,CAAC,iDAAiD,EAAE,oBAAoB,CAAC,CAAC;QAC1F,CAAC,EA/DkB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QA+D/B;IAAD,CAAC,EA/DU,OAAO,GAAP,WAAO,KAAP,WAAO,QA+DjB;AAAD,CAAC,EA/DM,GAAG,KAAH,GAAG,QA+DT","file":"tarefas/minhas-tarefas/services/tarefas.service.js","sourcesContent":["module app.tarefas.minhasTarefas {\r\n    'use strict';\r\n    import IHttpService = angular.IHttpService;\r\n    import IPromise = angular.IPromise;\r\n    \r\n    export interface ITaskTag {\r\n        id?: number,\r\n        name: string,\r\n        label: string,\r\n        color: string\r\n    }\r\n    \r\n    export interface ITaskAttachment {\r\n        name: string,\r\n        size: number\r\n    }\r\n    \r\n    export interface ITask {\r\n        id?: string,\r\n        title: string,\r\n        notes: string,\r\n        startDate: Date,\r\n        startDateTimestamp: number,\r\n        dueDate: Date,\r\n        dueDateTimestamp: number,\r\n        completed: boolean,\r\n        starred: boolean,\r\n        important: boolean,\r\n        deleted: boolean,\r\n        tags: ITaskTag[],\r\n        attachments: ITaskAttachment[],\r\n        selected?: boolean\r\n    }\r\n    \r\n    export class MinhasTarefasService {\r\n        \r\n        private static apiTarefas: string = 'http://localhost:8081/api/tarefas';\r\n        \r\n        /** @ngInject **/\r\n        constructor(private $http: IHttpService) { }\r\n        \r\n        public get(): IPromise<ITask[]> {\r\n            return this.$http.get(MinhasTarefasService.apiTarefas)\r\n                        .then(response => {\r\n                            var tasks: ITask[] = <ITask[]>response.data;\r\n                            angular.forEach(tasks, task => {\r\n                                if (angular.isNumber(task.startDate)) {\r\n                                    task.startDate = new Date(task.startDate.valueOf());\r\n                                    task.startDateTimestamp = task.startDate.getTime() / 1000;\r\n                                }\r\n                                if (angular.isNumber(task.dueDate)) {\r\n                                    task.dueDate = new Date(task.dueDate.valueOf());\r\n                                    task.dueDateTimestamp = task.dueDate.getTime() / 1000;\r\n                                }\r\n                            });\r\n                            return tasks;\r\n                        });\r\n        }\r\n    }\r\n    \r\n    angular\r\n        .module('app.tarefas.minhas-tarefas')\r\n        .service('app.tarefas.minhas-tarefas.MinhasTarefasService', MinhasTarefasService);\r\n}"],"sourceRoot":"/source/"}