{"version":3,"sources":["novo-processo/novo-processo.controller.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CAsDT;AAtDD,WAAO,GAAG;IAAC,IAAA,YAAY,CAsDtB;IAtDU,WAAA,YAAY,EAAC,CAAC;QACrB,YAAY,CAAC;QAUb;YAKI,iBAAiB;YACjB,gCAAoB,MAAc;gBANtC,iBAsCC;gBAhCuB,WAAM,GAAN,MAAM,CAAQ;gBAC9B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAQ,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBAClF,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC,gBAAgB,EAAE,CAAC;YAC/D,CAAC;YAEO,iDAAgB,GAAxB;gBAAA,iBAaC;gBAZG,MAAM,CAAC;oBACH,IAAI,KAAK,GAAO,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBACjD,IAAI,MAAM,GAAuB,sBAAsB,CAAC,gBAAgB,EAAE,CAAC;oBAE3E,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,UAAC,QAAQ;4BACpC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC/D,CAAC,CAAC,CAAC;oBACP,CAAC;gBACL,CAAC,CAAC;YACN,CAAC;YAEc,uCAAgB,GAA/B;gBACI,MAAM,CAAC,CAAC;wBACJ,EAAE,EAAG,CAAC;wBACN,IAAI,EAAG,cAAc;wBACrB,KAAK,EAAG,4BAA4B;qBACvC,EAAE;wBACC,EAAE,EAAG,CAAC;wBACN,IAAI,EAAG,qBAAqB;wBAC5B,KAAK,EAAG,oCAAoC;qBAC/C,CAAC,CAAC;YACP,CAAC;YACL,6BAAC;QAAD,CAtCA,AAsCC,IAAA;QAtCY,mCAAsB,yBAsClC,CAAA;QAED,OAAO;aACF,MAAM,CAAC,mBAAmB,CAAC;aAC3B,UAAU,CAAC,0CAA0C,EAAE,sBAAsB,CAAC,CAAC;IACxF,CAAC,EAtDU,YAAY,GAAZ,gBAAY,KAAZ,gBAAY,QAsDtB;AAAD,CAAC,EAtDM,GAAG,KAAH,GAAG,QAsDT","file":"novo-processo/novo-processo.controller.js","sourcesContent":["module app.novoProcesso {\r\n    'use strict';\r\n    \r\n    import IScope = angular.IScope;\r\n    \r\n    interface IProcessoWorkflow {\r\n        id: number;\r\n        name: string;\r\n        state: string;\r\n    }\r\n    \r\n    export class NovoProcessoController {\r\n        \r\n        public buscaProcesso: string;\r\n        public processos: IProcessoWorkflow[];\r\n        \r\n        /** @ngInject **/\r\n        constructor(private $scope: IScope) {\r\n            this.buscaProcesso = \"\";\r\n            this.$scope.$watch(() => { return this.buscaProcesso; }, this.filtrarProcessos());\r\n            this.processos = NovoProcessoController.getProcessosMock();\r\n        }\r\n\r\n        private filtrarProcessos(): Function {\r\n            return (): void => {\r\n                var busca:any = this.buscaProcesso.toLowerCase();\r\n                var origem:IProcessoWorkflow[] = NovoProcessoController.getProcessosMock();\r\n\r\n                if (busca.length === 0) {\r\n                    this.processos = origem;\r\n                } else {\r\n                    this.processos = origem.filter((processo) => {\r\n                        return (processo.name.toLowerCase().indexOf(busca) !== -1);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n\r\n        private static getProcessosMock(): IProcessoWorkflow[] {\r\n            return [{\r\n                id : 1,\r\n                name : \"Nova Petição\",\r\n                state : 'app.novo-processo.peticoes'\r\n            }, {\r\n                id : 2,\r\n                name : \"Nova Petição Física\",\r\n                state : 'app.novo-processo.peticoes-fisicas'\r\n            }];\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('app.novo-processo')\r\n        .controller('app.novo-processo.NovoProcessoController', NovoProcessoController);\r\n}"],"sourceRoot":"/source/"}