{"version":3,"sources":["tarefas/minhas-tarefas/minhas-tarefas.controller.ts"],"names":[],"mappings":"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","file":"tarefas/minhas-tarefas/minhas-tarefas.controller.js","sourcesContent":["module app.tarefas.minhasTarefas {\r\n    'use strict';\r\n    import IDialogService = angular.material.IDialogService;\r\n    import ISidenavService = angular.material.ISidenavService;\r\n    import IFilterService = angular.IFilterService;\r\n    import IScope = angular.IScope;\r\n    import IHttpService = angular.IHttpService;\r\n    import IDocumentService = angular.IDocumentService;\r\n\r\n    interface ISelectedFilter {\r\n        filter: string;\r\n        dueDate: number | boolean;\r\n    }\r\n\r\n    interface ITaskFilters {\r\n        search   : string,\r\n        tags     : ITaskTag[],\r\n        completed: boolean,\r\n        deleted  : boolean,\r\n        important: boolean,\r\n        starred  : boolean\r\n    }\r\n\r\n    export class MinhasTarefasController {\r\n        \r\n        public completed: Array<string>;\r\n        public colors: Array<string> = ['blue', 'blue-grey', 'orange', 'pink', 'purple'];\r\n        public selectedFilter: ISelectedFilter = <ISelectedFilter>{\r\n            filter : 'Start Date',\r\n            dueDate: false\r\n        };\r\n        public taskFilters: ITaskFilters = <ITaskFilters>{\r\n            search   : '',\r\n            tags     : [],\r\n            completed: false,\r\n            deleted  : false,\r\n            important: false,\r\n            starred  : false\r\n        };\r\n        public taskFiltersDefaults: ITaskFilters;\r\n        public showAllTasks: boolean = true;\r\n        public taskOrder: string = '';\r\n        public taskOrderDescending: boolean = false;\r\n        public sortableOptions: Object = {\r\n            handle        : '.handle',\r\n            forceFallback : true,\r\n            ghostClass    : 'todo-item-placeholder',\r\n            fallbackClass : 'todo-item-ghost',\r\n            fallbackOnBody: true,\r\n            sort          : true\r\n        };\r\n        public msScrollOptions: Object = {\r\n            suppressScrollX: true\r\n        };\r\n        public collapsed: boolean = false;\r\n        public newTag: string;\r\n        \r\n        static $inject: ['$document', '$mdDialog', '$mdSidenav', '$filter', '$scope', 'tasks', 'tags'];\r\n        \r\n        constructor(private $document: IDocumentService,\r\n                    private $mdDialog: IDialogService, \r\n                    private $mdSidenav: ISidenavService, \r\n                    private $filter: IFilterService, \r\n                    private $scope: IScope,\r\n                    private tasks: ITask[],\r\n                    private tags: ITaskTag[]) {\r\n\r\n            this.taskFiltersDefaults = angular.copy(this.taskFilters);\r\n        }\r\n\r\n        /**\r\n         * Prevent default\r\n         *\r\n         * @param e\r\n         */\r\n        public preventDefault(e: Event): void {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        /**\r\n         * Open new task dialog\r\n         *\r\n         * @param ev\r\n         * @param task\r\n         */\r\n        public openTaskDialog(ev: MouseEvent, task: ITask): void {\r\n            this.$mdDialog.show({\r\n                controller         : TaskDialogController,\r\n                controllerAs       : 'vm',\r\n                templateUrl        : 'app/main/tarefas/minhas-tarefas/dialogs/task/task-dialog.html',\r\n                parent             : this.$document.find('body'),\r\n                targetEvent        : ev,\r\n                clickOutsideToClose: true,\r\n                locals             : {\r\n                    task : task,\r\n                    tasks: this.tasks,\r\n                    event: ev\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Toggle completed status of the task\r\n         *\r\n         * @param task\r\n         * @param event\r\n         */\r\n        public toggleCompleted(task: ITask, event: Event): void {\r\n            event.stopPropagation();\r\n            task.completed = !task.completed;\r\n        }\r\n\r\n        /**\r\n         * Toggle sidenav\r\n         *\r\n         * @param sidenavId\r\n         */\r\n        public toggleSidenav(sidenavId: string): void {\r\n            this.$mdSidenav(sidenavId).toggle();\r\n        }\r\n\r\n        /**\r\n         * Toggles filter with true or false\r\n         *\r\n         * @param filter\r\n         */\r\n        public toggleFilter(filter: string): void {\r\n            this.taskFilters[filter] = !this.taskFilters[filter];\r\n            this.checkFilters();\r\n        }\r\n\r\n        /**\r\n         * Toggles filter with true or empty string\r\n         * @param filter\r\n         */\r\n        public toggleFilterWithEmpty(filter: string): void {\r\n            if ( this.taskFilters[filter] === '' ) {\r\n                this.taskFilters[filter] = true;\r\n            } else {\r\n                this.taskFilters[filter] = '';\r\n            }\r\n            this.checkFilters();\r\n        }\r\n\r\n        /**\r\n         * Reset filters\r\n         */\r\n        public resetFilters(): void {\r\n            this.showAllTasks = true;\r\n            this.taskFilters = angular.copy(this.taskFiltersDefaults);\r\n        }\r\n\r\n        /**\r\n         * Check filters and mark showAllthis.Tasks\r\n         * as true if no filters selected\r\n         */\r\n        public checkFilters(): void {\r\n            this.showAllTasks = !!angular.equals(this.taskFiltersDefaults, this.taskFilters);\r\n        }\r\n\r\n        /**\r\n         * Filter Due Date\r\n         *\r\n         * @param item\r\n         * @returns {boolean}\r\n         */\r\n        public filterByDueDate(): Function {\r\n            return (item: ITask): boolean => {\r\n                if (this.selectedFilter.dueDate !== false) {\r\n                    if (! item.dueDate) {\r\n                        return false;\r\n                    }\r\n                    var now = (new Date()).getTime() / 1000;\r\n                    return (item.dueDateTimestamp <= (now + <number>this.selectedFilter.dueDate));\r\n                }\r\n                return true;\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Toggles tag filter\r\n         *\r\n         * @param tag\r\n         */\r\n        public toggleTagFilter(tag: ITaskTag): void {\r\n            var i = this.taskFilters.tags.indexOf(tag);\r\n\r\n            if ( i > -1 ) {\r\n                this.taskFilters.tags.splice(i, 1);\r\n            } else {\r\n                this.taskFilters.tags.push(tag);\r\n            }\r\n            this.checkFilters();\r\n        }\r\n\r\n        /**\r\n         * Returns if tag exists in the tagsFilter\r\n         *\r\n         * @param tag\r\n         * @returns {boolean}\r\n         */\r\n        public isTagFilterExists(tag: ITaskTag): boolean {\r\n            return this.taskFilters.tags.indexOf(tag) > -1;\r\n        }\r\n\r\n        public processNewTagKeydown(event: KeyboardEvent): void {\r\n            if (event.keyCode !== 13) {\r\n                return;\r\n            }\r\n\r\n            this.tags.unshift({\r\n                \"id\": this.tags.length + 1,\r\n                \"name\": this.newTag.toLowerCase().replace(/\\s/, '-'),\r\n                \"label\": this.newTag,\r\n                \"color\": \"#BBBBBB\"\r\n            });\r\n            this.newTag = \"\";\r\n        }\r\n\r\n        public countTagsWithFilter(filter: string): number {\r\n            return this.$filter('filter')(this.tasks, filter).length;\r\n        }\r\n\r\n        public hasSelectedTasks(): boolean {\r\n            for (var i = 0; i < this.tasks.length; i++) {\r\n                if (this.tasks[i].selected) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        public selectedCompleteDistribution(): number {\r\n            var selectedCount: number = 0,\r\n                completedCount: number = 0;\r\n\r\n            for (var i = 0; i < this.tasks.length; i++) {\r\n                var task = this.tasks[i];\r\n\r\n                if (task.selected) {\r\n                    selectedCount++;\r\n\r\n                    if (task.completed) {\r\n                        completedCount++;\r\n                    }\r\n                }\r\n            }\r\n            if (completedCount === 0) {\r\n                return 0;\r\n            } else if (completedCount === selectedCount) {\r\n                return 1;\r\n            } else {\r\n                return 0.5;\r\n            }\r\n        }\r\n\r\n        public selectedToggleCompleted($event: Event): void {\r\n            for (var i = 0; i < this.tasks.length; i++) {\r\n                var task = this.tasks[i];\r\n                if (task.selected) {\r\n                    this.toggleCompleted(task, $event);\r\n                    task.selected = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        public removeSelection(): void {\r\n            for (var i = 0; i < this.tasks.length; i++) {\r\n                this.tasks[i].selected = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('app.tarefas.minhas-tarefas')\r\n        .controller('app.tarefas.minhas-tarefas.MinhasTarefasController', MinhasTarefasController);\r\n}"],"sourceRoot":"/source/"}